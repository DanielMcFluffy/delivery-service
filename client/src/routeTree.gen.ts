/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as landingPageHomeImport } from './routes/(landing-page)/home'
import { Route as landingPageHomeServiceImport } from './routes/(landing-page)/home.service'
import { Route as landingPageHomeMainImport } from './routes/(landing-page)/home.main'
import { Route as landingPageHomeAboutImport } from './routes/(landing-page)/home.about'
import { Route as authenticateddashboardDashboardImport } from './routes/(authenticated)/(dashboard)/dashboard'
import { Route as authenticateddashboardDashboardIndexImport } from './routes/(authenticated)/(dashboard)/dashboard.index'
import { Route as authenticateddashboardDashboardTasksImport } from './routes/(authenticated)/(dashboard)/dashboard.tasks'
import { Route as authenticateddashboardDashboardSettingsImport } from './routes/(authenticated)/(dashboard)/dashboard.settings'
import { Route as authenticateddashboardDashboardProfileImport } from './routes/(authenticated)/(dashboard)/dashboard.profile'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const landingPageHomeRoute = landingPageHomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const landingPageHomeServiceRoute = landingPageHomeServiceImport.update({
  path: '/service',
  getParentRoute: () => landingPageHomeRoute,
} as any)

const landingPageHomeMainRoute = landingPageHomeMainImport.update({
  path: '/main',
  getParentRoute: () => landingPageHomeRoute,
} as any)

const landingPageHomeAboutRoute = landingPageHomeAboutImport.update({
  path: '/about',
  getParentRoute: () => landingPageHomeRoute,
} as any)

const authenticateddashboardDashboardRoute =
  authenticateddashboardDashboardImport
    .update({
      path: '/dashboard',
      getParentRoute: () => rootRoute,
    } as any)
    .lazy(() =>
      import('./routes/(authenticated)/(dashboard)/dashboard.lazy').then(
        (d) => d.Route,
      ),
    )

const authenticateddashboardDashboardIndexRoute =
  authenticateddashboardDashboardIndexImport.update({
    path: '/',
    getParentRoute: () => authenticateddashboardDashboardRoute,
  } as any)

const authenticateddashboardDashboardTasksRoute =
  authenticateddashboardDashboardTasksImport.update({
    path: '/tasks',
    getParentRoute: () => authenticateddashboardDashboardRoute,
  } as any)

const authenticateddashboardDashboardSettingsRoute =
  authenticateddashboardDashboardSettingsImport.update({
    path: '/settings',
    getParentRoute: () => authenticateddashboardDashboardRoute,
  } as any)

const authenticateddashboardDashboardProfileRoute =
  authenticateddashboardDashboardProfileImport.update({
    path: '/profile',
    getParentRoute: () => authenticateddashboardDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(landing-page)/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof landingPageHomeImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/(dashboard)/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticateddashboardDashboardImport
      parentRoute: typeof rootRoute
    }
    '/(landing-page)/home/about': {
      id: '/home/about'
      path: '/about'
      fullPath: '/home/about'
      preLoaderRoute: typeof landingPageHomeAboutImport
      parentRoute: typeof landingPageHomeImport
    }
    '/(landing-page)/home/main': {
      id: '/home/main'
      path: '/main'
      fullPath: '/home/main'
      preLoaderRoute: typeof landingPageHomeMainImport
      parentRoute: typeof landingPageHomeImport
    }
    '/(landing-page)/home/service': {
      id: '/home/service'
      path: '/service'
      fullPath: '/home/service'
      preLoaderRoute: typeof landingPageHomeServiceImport
      parentRoute: typeof landingPageHomeImport
    }
    '/(authenticated)/(dashboard)/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof authenticateddashboardDashboardProfileImport
      parentRoute: typeof authenticateddashboardDashboardImport
    }
    '/(authenticated)/(dashboard)/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof authenticateddashboardDashboardSettingsImport
      parentRoute: typeof authenticateddashboardDashboardImport
    }
    '/(authenticated)/(dashboard)/dashboard/tasks': {
      id: '/dashboard/tasks'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof authenticateddashboardDashboardTasksImport
      parentRoute: typeof authenticateddashboardDashboardImport
    }
    '/(authenticated)/(dashboard)/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof authenticateddashboardDashboardIndexImport
      parentRoute: typeof authenticateddashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface landingPageHomeRouteChildren {
  landingPageHomeAboutRoute: typeof landingPageHomeAboutRoute
  landingPageHomeMainRoute: typeof landingPageHomeMainRoute
  landingPageHomeServiceRoute: typeof landingPageHomeServiceRoute
}

const landingPageHomeRouteChildren: landingPageHomeRouteChildren = {
  landingPageHomeAboutRoute: landingPageHomeAboutRoute,
  landingPageHomeMainRoute: landingPageHomeMainRoute,
  landingPageHomeServiceRoute: landingPageHomeServiceRoute,
}

const landingPageHomeRouteWithChildren = landingPageHomeRoute._addFileChildren(
  landingPageHomeRouteChildren,
)

interface authenticateddashboardDashboardRouteChildren {
  authenticateddashboardDashboardProfileRoute: typeof authenticateddashboardDashboardProfileRoute
  authenticateddashboardDashboardSettingsRoute: typeof authenticateddashboardDashboardSettingsRoute
  authenticateddashboardDashboardTasksRoute: typeof authenticateddashboardDashboardTasksRoute
  authenticateddashboardDashboardIndexRoute: typeof authenticateddashboardDashboardIndexRoute
}

const authenticateddashboardDashboardRouteChildren: authenticateddashboardDashboardRouteChildren =
  {
    authenticateddashboardDashboardProfileRoute:
      authenticateddashboardDashboardProfileRoute,
    authenticateddashboardDashboardSettingsRoute:
      authenticateddashboardDashboardSettingsRoute,
    authenticateddashboardDashboardTasksRoute:
      authenticateddashboardDashboardTasksRoute,
    authenticateddashboardDashboardIndexRoute:
      authenticateddashboardDashboardIndexRoute,
  }

const authenticateddashboardDashboardRouteWithChildren =
  authenticateddashboardDashboardRoute._addFileChildren(
    authenticateddashboardDashboardRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof landingPageHomeRouteWithChildren
  '/dashboard': typeof authenticateddashboardDashboardRouteWithChildren
  '/home/about': typeof landingPageHomeAboutRoute
  '/home/main': typeof landingPageHomeMainRoute
  '/home/service': typeof landingPageHomeServiceRoute
  '/dashboard/profile': typeof authenticateddashboardDashboardProfileRoute
  '/dashboard/settings': typeof authenticateddashboardDashboardSettingsRoute
  '/dashboard/tasks': typeof authenticateddashboardDashboardTasksRoute
  '/dashboard/': typeof authenticateddashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof landingPageHomeRouteWithChildren
  '/home/about': typeof landingPageHomeAboutRoute
  '/home/main': typeof landingPageHomeMainRoute
  '/home/service': typeof landingPageHomeServiceRoute
  '/dashboard/profile': typeof authenticateddashboardDashboardProfileRoute
  '/dashboard/settings': typeof authenticateddashboardDashboardSettingsRoute
  '/dashboard/tasks': typeof authenticateddashboardDashboardTasksRoute
  '/dashboard': typeof authenticateddashboardDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/home': typeof landingPageHomeRouteWithChildren
  '/dashboard': typeof authenticateddashboardDashboardRouteWithChildren
  '/home/about': typeof landingPageHomeAboutRoute
  '/home/main': typeof landingPageHomeMainRoute
  '/home/service': typeof landingPageHomeServiceRoute
  '/dashboard/profile': typeof authenticateddashboardDashboardProfileRoute
  '/dashboard/settings': typeof authenticateddashboardDashboardSettingsRoute
  '/dashboard/tasks': typeof authenticateddashboardDashboardTasksRoute
  '/dashboard/': typeof authenticateddashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/dashboard'
    | '/home/about'
    | '/home/main'
    | '/home/service'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/tasks'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/home/about'
    | '/home/main'
    | '/home/service'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/tasks'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/dashboard'
    | '/home/about'
    | '/home/main'
    | '/home/service'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/tasks'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  landingPageHomeRoute: typeof landingPageHomeRouteWithChildren
  authenticateddashboardDashboardRoute: typeof authenticateddashboardDashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  landingPageHomeRoute: landingPageHomeRouteWithChildren,
  authenticateddashboardDashboardRoute:
    authenticateddashboardDashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home": {
      "filePath": "(landing-page)/home.tsx",
      "children": [
        "/home/about",
        "/home/main",
        "/home/service"
      ]
    },
    "/dashboard": {
      "filePath": "(authenticated)/(dashboard)/dashboard.tsx",
      "children": [
        "/dashboard/profile",
        "/dashboard/settings",
        "/dashboard/tasks",
        "/dashboard/"
      ]
    },
    "/home/about": {
      "filePath": "(landing-page)/home.about.tsx",
      "parent": "/home"
    },
    "/home/main": {
      "filePath": "(landing-page)/home.main.tsx",
      "parent": "/home"
    },
    "/home/service": {
      "filePath": "(landing-page)/home.service.tsx",
      "parent": "/home"
    },
    "/dashboard/profile": {
      "filePath": "(authenticated)/(dashboard)/dashboard.profile.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings": {
      "filePath": "(authenticated)/(dashboard)/dashboard.settings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/tasks": {
      "filePath": "(authenticated)/(dashboard)/dashboard.tasks.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "(authenticated)/(dashboard)/dashboard.index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
